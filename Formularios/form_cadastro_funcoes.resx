<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel_lupa.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>